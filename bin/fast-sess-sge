#! /usr/bin/env python
# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4

"""Merge volume in feat directory for sessions
Author: Zonglei Zhen @ bnu

"""

import os
import glob
import shutil
import logging
import argparse
import subprocess


parser = argparse.ArgumentParser(description="Segment a anatomical volume into different tissue types")


parser.add_argument('-sf',
                    type=argparse.FileType('r'),
                    required=True,
                    help='session id file, each row contains a session id',
                    metavar='sessidfile')

parser.add_argument('-df',
                    type=argparse.FileType('r'),
                    required=True,
                    help='session parenet file, each row is a parent directory',
                    metavar='sessparfile')


parser.add_argument('-anat',
                    required=True,
                    help='Anatomical directory in each session, e.g., 3danat/reg_fsl',
                    metavar='anatdir')

parser.add_argument('-stem',
                    required=True,
                    help='Stem for target volume relative to the anat directory, e.g., T1_brain',
                    metavar='stemvolume')


def main():
    sesspar = args.df.readline().strip()
    for sess in args.sf:
        sess = sess.strip()
        if not sess:
            continue
        anat = os.path.join(sesspar, sess, args.anat)
        high2std = os.path.join(anat, 'highres2standard_2mm.mat')
        std2high = os.path.join(anat, 'standard2highres_2mm.mat')
        xfm = ' '.join(['convert_xfm','-omat', std2high,'-inverse', high2std])

        file = os.path.join(anat, args.stem)
        out = file
        fast = ' '.join(['fast','-P','-a',std2high,'-g','--nopve','-o',out,file])

        fastcmd = os.path.join(anat,'fastcmd')
        f = open(fastcmd,'wb')
        f.write('#! /bin/bash\n')
        f.write('#$ -N ' + sess + '-fast' + '\n')
        f.write('#$ -S /bin/bash\n')
        f.write('#$ -V\n')
        f.write('#$ -cwd\n')
        f.write('#$ -q short.q\n')
        f.write(xfm + '\n' + fast +'\n')
        f.close()
        os.system('qsub ' + fastcmd)

if __name__ == '__main__':
    args = parser.parse_args()
    logging.basicConfig(format='%(asctime)s %(levelname)s: %(message)s',
                        datefmt='%Y/%m/%d %H:%M:%S',
                        filename='fast-sess.log', filemode='w',
                        level=logging.DEBUG)
    logging.info(args)
    logging.info('Here we go!')
    main()
